# =============================================================================
# Valkey systemd service unit file (generated by Ansible)
#
# This unit file runs Valkey (Redis alternative) as a secure, managed service
# on Debian systems. All user, group, and directory settings are templated for
# automation and best-practice hardening. Logs are sent to systemd journal.
#
# References:
#   - https://databases_valkey.io/
#   - https://databases_valkey.io/docs/
#
# Edit variables in your playbook to customise deployment.
# =============================================================================

# Valkey systemd service unit file
# ===============================
# Installs Valkey as a systemd service for manual binary installs.
# Place this file at /etc/systemd/system/databases_valkey.service

[Unit]
Description=Valkey In-Memory Data Store
Documentation=https://databases_valkey.io/

# Service Dependencies
######################

# Requires the network to be up before starting
After=network.target

[Service]
Type=notify

ExecStart=/usr/local/bin/valkey-server {{ valkey_config_dir}}/databases_valkey.conf


# Process management
####################

Restart=on-failure
TimeoutStartSec=60
TimeoutStopSec=30


# Directory creation and permissions
####################################

# Run as {{ databases_valkey.user }}:{{ databases_valkey.user }}
User={{ databases_valkey.user }}
Group={{ databases_valkey.user }}

# Set permissions for the runtime directory
# /run/{{ databases_valkey.user }}
RuntimeDirectory={{ databases_valkey.user }}
RuntimeDirectoryMode=0750

# Set permissions for the configuration directory
# /etc/{{ databases_valkey.user }}
ConfigurationDirectory={{ databases_valkey.user }}
ConfigurationDirectoryMode=0740

# Set permissions for the data directory
# /data/{{ databases_valkey.user }}
StateDirectory=/data/{{ databases_valkey.user }}
StateDirectoryMode=0710


# Logging to systemd
####################

# Send logs to stdout/stderr for systemd to capture
# Ensure these are NOT redirected to debug.log in your bitcoin.conf or ExecStart command
StandardOutput=journal
StandardError=journal
SyslogIdentifier={{ databases_valkey.user }}


# Hardening measures
####################

LimitNOFILE=65536
NoNewPrivileges=true
PrivateTmp=true
ProtectSystem=full
ProtectHome=true
ReadWritePaths={{ valkey_data_dir }}

[Install]
WantedBy=multi-user.target
