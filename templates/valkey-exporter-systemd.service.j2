# ------------------------------------------------------------------------------
# Valkey Exporter Systemd Service Unit File
# ------------------------------------------------------------------------------
#
# ‚ö†Ô∏è WARNING: This file is managed by Ansible! ‚ö†Ô∏è
# üîÑ Any manual changes will be overwritten on the next Ansible run
# üìù To make changes, edit the template file and run the playbook
#
# This systemd service file configures valkey-exporter to run as a system service,
# providing Prometheus metrics collection for Valkey/Redis monitoring.
#
# Features:
#   - Collects Valkey/Redis metrics (memory, connections, commands, persistence)
#   - Exports metrics in Prometheus format
#   - Secure execution with hardened permissions
#   - Automatic restart on failure
#   - Proper dependency management
#
# Configuration:
#   - Config: Environment variables from {{ valkey_exporter_config_dir }}/{{ valkey_exporter_systemd_name }}.conf
#   - Data directory: {{ valkey_exporter_data_dir }}
#   - User: {{ valkey_exporter_user }}
#   - Working directory: {{ valkey_exporter_data_dir }}
#   - Binary location: /usr/local/bin/redis_exporter
#   - Logs: sudo journalctl -u {{ valkey_exporter_systemd_name }} -f
#
# Usage:
#   sudo systemctl enable {{ valkey_exporter_systemd_name }}    # Enable on boot
#   sudo systemctl start {{ valkey_exporter_systemd_name }}     # Start service
#   sudo systemctl status {{ valkey_exporter_systemd_name }}    # Check status
#   sudo systemctl stop {{ valkey_exporter_systemd_name }}      # Stop service
#   sudo journalctl -u {{ valkey_exporter_systemd_name }}       # View logs
#   sudo journalctl -u {{ valkey_exporter_systemd_name }} -f    # View and follow logs
#
# Security Notes:
#   - valkey-exporter runs with limited privileges
#   - Network access restricted to monitoring port only
#   - No write access to system directories
#
# Dependencies:
#   - Requires network.target and databases_valkey.service (if available)
#
# References:
#   - https://github.com/oliver006/redis_exporter
#   - https://databases_valkey.io/
#
# Last updated: 2025-07-14
# ------------------------------------------------------------------------------

[Unit]
Description=Valkey Exporter for Prometheus
Documentation=https://github.com/oliver006/redis_exporter


# Service Dependencies
######################
# Wait for services to start before starting this service
After=network.target databases_valkey.service
# Soft dependency - ensure network is fully operational before starting
Wants=network.target
# Hard dependency - Exporter requires Valkey to be running
Requires=databases_valkey.service
# When Valkey stops/restarts, this service stops/restarts too
PartOf=databases_valkey.service


[Service]
# The folder to run the ExecStart command from
WorkingDirectory={{ valkey_exporter_data_dir }}

# Load environment variables from configuration file
EnvironmentFile={{ valkey_exporter_config_dir }}/{{ valkey_exporter_systemd_name }}.conf

# Start the valkey-exporter service
ExecStart=/usr/local/bin/redis_exporter


# Process management
####################

Type=simple

Restart=on-failure
RestartSec=10


# Directory creation and permissions
####################################

# Run the service as {{ valkey_exporter_user }}:{{ databases_valkey.user }}
User={{ valkey_exporter_user }}
Group={{ databases_valkey.user }}

# Set permissions for the runtime directory
# /run/{{ valkey_exporter_systemd_name }}
RuntimeDirectory={{ valkey_exporter_systemd_name }}
RuntimeDirectoryMode=0750

# Set permissions for the configuration directory
# /etc/{{ valkey_exporter_systemd_name }}
ConfigurationDirectory={{ valkey_exporter_systemd_name }}
ConfigurationDirectoryMode=0760

# Set permissions for the data directory
# /data/{{ valkey_exporter_systemd_name }}
StateDirectory=/data/{{ valkey_exporter_systemd_name }}
StateDirectoryMode=0710

# Set read only paths for the service process and all its children
ReadOnlyPaths={{ valkey_exporter_config_dir }}

# Set read write paths for the service process and all its children
ReadWritePaths={{ valkey_exporter_data_dir }}


# Logging to systemd
####################

# Log to systemd journal
StandardOutput=journal
StandardError=journal
SyslogIdentifier={{ valkey_exporter_systemd_name }}


# Hardening measures
####################


# Provide a private /tmp and /var/tmp.
PrivateTmp=true

# Mount /usr, /boot/ and /etc read-only for the process.
ProtectSystem=full

# Deny access to /home, /root and /run/user
ProtectHome=true

# Disallow the process and all of its children to gain
# new privileges through execve().
NoNewPrivileges=true

# Use a new /dev namespace only populated with API pseudo devices
# such as /dev/null, /dev/zero and /dev/random.
PrivateDevices=true

# Deny the creation of writable and executable memory mappings.
MemoryDenyWriteExecute=true

# Restrict ABIs to help ensure MemoryDenyWriteExecute is enforced
SystemCallArchitectures=native

# Prevents the service (and any processes it spawns) from loading, unloading, or modifying Linux kernel modules
ProtectKernelModules=true

# Prevents the service (and any processes it spawns) from modifying or creating control groups (cgroups) on the system
ProtectControlGroups=true

# Limits which network address families the service can use
RestrictAddressFamilies=AF_INET

# Prevents the service (and any processes it spawns) from gaining real-time scheduling privileges
RestrictRealtime=true


[Install]
WantedBy=multi-user.target
