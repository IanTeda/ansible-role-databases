# =============================================================================
# Valkey Systemd Service File - Ansible Managed
# =============================================================================
# ⚠️ WARNING: This file is managed by Ansible - DO NOT EDIT MANUALLY!
# Any manual changes will be overwritten on the next playbook run.
# Edit the template file or Ansible variables instead.
#
# Template path: roles/databases/templates/valkey-systemd.service.j2
# Deploy path: /lib/systemd/system/{{ valkey_systemd_name }}.service
# Last deployed: {{ ansible_date_time.iso8601 }}
# =============================================================================
#
# This systemd service file runs Valkey (Redis alternative) as a secure, managed 
# service. All user, group, and directory settings are templated for automation 
# and best-practice hardening. Logs are sent to systemd journal.
#
# Features:
#   - Waits for network to be online before starting
#   - Hardened with systemd security options
#
# Usage:
#   sudo systemctl enable {{ valkey_systemd_name }}
#   sudo systemctl start {{ valkey_systemd_name }}
#   sudo systemctl status {{ valkey_systemd_name }}
#   sudo journalctl -u {{ valkey_systemd_name }} -f
#
# Security Notes:
#   - {{ valkey_systemd_name }} runs with limited privileges
#
# Dependencies:
#   - Requires network.target and auditd.service
#
# References:
#   - https://databases_valkey.io/
#   - https://databases_valkey.io/docs/
#
# Generated by Ansible on {{ ansible_date_time.iso8601 }}
# Host: {{ ansible_fqdn }}
# -----------------------------------------------------------------------------

[Unit]
Description=Valkey In-Memory Data Store
Documentation=https://databases_valkey.io/

# Service Dependencies
######################

# Requires the network to be up before starting
After=network.target


[Service]
Type=notify

ExecStart=/usr/local/bin/valkey-server {{ valkey_config_file }}


# Process management
####################

Restart=on-failure
TimeoutStartSec=60
TimeoutStopSec=30


# Directory creation and permissions
####################################

# Run as {{ valkey_user }}:{{ valkey_group }}
User={{ valkey_user }}
Group={{ valkey_group }}

# Let Systemd manage the run time directory
# /run/{{ valkey_user }}
RuntimeDirectory={{ valkey_user }}
RuntimeDirectoryMode=0750


# Logging to systemd
####################

# Send logs to stdout/stderr for systemd to capture
# Ensure these are NOT redirected to debug.log in your bitcoin.conf or ExecStart command
StandardOutput=journal
StandardError=journal
SyslogIdentifier={{ valkey_user }}


# Hardening measures
####################

LimitNOFILE=65536
NoNewPrivileges=true
PrivateTmp=true
ProtectSystem=full
ProtectHome=true
ReadOnly={{ valkey_config_dir }}
ReadWritePaths={{ valkey_data_dir }}

[Install]
WantedBy=multi-user.target
