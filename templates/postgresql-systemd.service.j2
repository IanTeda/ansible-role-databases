# =============================================================================
# PostgreSQL Database Server Systemd Service Unit File
# =============================================================================
# ⚠️ WARNING: This file is managed by Ansible - DO NOT EDIT MANUALLY!       ⚠️ 
# Any manual changes will be overwritten on the next Ansible run.
# Edit the template file or Ansible variables instead.
# =============================================================================
#
# This file is managed by Ansible - DO NOT EDIT MANUALLY
# Generated from: roles/debian/templates/postgresql.conf.j2
# Last updated: {{ ansible_date_time.iso8601 }}
#
# This systemd service file configures PostgreSQL to run as a system service,
# providing a powerful, open source object-relational database system.
#
# Features:
#   - ACID compliant transactions
#   - Advanced SQL features and extensibility
#   - High performance with concurrent access
#   - Replication and high availability support
#   - Comprehensive security features
#
# Configuration:
#   - Config file: {{ postgres_config_dir }}/postgresql.conf
#   - Data directory: {{ postgres_data_dir }}
#   - User: {{ postgres_user }}
#   - Working directory: {{ postgres_data_dir }}
#   - Binary location: /usr/local/bin/postgres
#   - Logs: sudo journalctl -u {{ postgres_systemd_name }} -f
#
# Usage:
#   sudo systemctl enable {{ postgres_systemd_name }}    # Enable on boot
#   sudo systemctl start {{ postgres_systemd_name }}     # Start service
#   sudo systemctl status {{ postgres_systemd_name }}    # Check status
#   sudo systemctl stop {{ postgres_systemd_name }}      # Stop service
#   sudo journalctl -u {{ postgres_systemd_name }}       # View logs
#   sudo journalctl -u {{ postgres_systemd_name }} -f    # View and follow logs
#
# Security Notes:
#   - PostgreSQL runs with limited privileges
#   - Uses strict system protection and sand boxing
#   - Private /tmp and /dev namespaces
#   - Read-only system directories
#
# Dependencies:
#   - Requires network.target
#
# References:
#   - https://www.postgresql.org/docs/
#   - https://www.postgresql.org/docs/current/server-start.html
#   - https://www.postgresql.org/docs/current/runtime-config.html
#
# Rev 20250717:
#   - Initial creation and configuration
# ------------------------------------------------------------------------------

[Unit]
Description=PostgreSQL Database Server
Documentation=https://www.postgresql.org/docs/

# Service Dependencies
######################
# Wait for the below service to start before starting this service
After=network.target

# Soft dependency - try to start the below service when starting this service (doesn't fail if it can't start)
Wants=network.target

[Service]
# The folder to run the ExecStart command from
WorkingDirectory={{ postgres_data_dir }}

ExecStart=/usr/local/bin/postgres -c config_file={{ postgres_config_dir }}/postgresql.conf \
                                  -D {{ postgres_data_dir }}

ExecReload=/bin/kill -HUP $MAINPID

# Process management
####################
# PostgreSQL is built with systemd support (which it is by default if libsystemd 
# is available at build time), the postgres server will send a notification to 
# systemd when it is ready to accept connections.
Type=notify

Restart=always
RestartSec=30
StartLimitInterval=350
StartLimitBurst=10

# Kill configuration
KillMode=mixed
KillSignal=SIGINT
TimeoutSec=0

# Directory creation and permissions
####################################

# Run the service as {{ postgres_user }}:{{ postgres_user }}
User={{ postgres_user }}
Group={{ postgres_user }}

# Let systemd manage the runtime directory
# /run/{{ postgres_user }}
RuntimeDirectory={{ postgres_user }}
RuntimeDirectoryMode=0750

# Set read write and read only paths for the service process and all its children
ReadWritePaths={{ postgres_data_dir }}
ReadOnlyPaths={{ postgres_config_dir }}

# Resource limits
LimitNOFILE=65536
LimitNPROC=32768

# Logging to systemd
####################

# Log to systemd journal
StandardOutput=journal
StandardError=journal
SyslogIdentifier={{ postgres_user }}

# Hardening measures
####################

# Provide a private /tmp and /var/tmp.
PrivateTmp=true

# Mount /usr, /boot/ and /etc read-only for the process.
ProtectSystem=strict

# Deny access to /home, /root and /run/user
ProtectHome=true

# Disallow the process and all of its children to gain
# new privileges through execve().
NoNewPrivileges=true

# Use a new /dev namespace only populated with API pseudo devices
# such as /dev/null, /dev/zero and /dev/random.
PrivateDevices=true

# Deny the creation of writable and executable memory mappings.
MemoryDenyWriteExecute=true

# Restrict ABIs to help ensure MemoryDenyWriteExecute is enforced
SystemCallArchitectures=native

# Prevents the service (and any processes it spawns) from loading, unloading, or modifying Linux kernel modules
ProtectKernelModules=true

# Prevents the service (and any processes it spawns) from modifying kernel tunables
ProtectKernelTunables=true

# Prevents the service (and any processes it spawns) from modifying or creating control groups (cgroups) on the system
ProtectControlGroups=true

# Limits which network address families the service can use
RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX

# Prevents the service (and any processes it spawns) from gaining real-time scheduling privileges
RestrictRealtime=true

[Install]
WantedBy=multi-user.target
